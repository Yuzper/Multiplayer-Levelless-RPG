//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Character/Player/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player Movement"",
            ""id"": ""2b816c2d-8bf8-46ca-8474-f85babd9ed87"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""18699c3e-1766-4d71-90d2-e86a0b01a0c3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""9cee6453-a771-4f3c-96ed-3edf30610db2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""56c86096-f444-4d3d-aea5-9c282ad986be"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7bd0ca9e-9d77-4258-ad6d-1aa5007083d4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""dd2ee61e-3b6c-4d6f-9d7f-8e2ec35d2c63"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4040b286-a9aa-40e9-b34e-66ade682e215"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Player Camera"",
            ""id"": ""4dde5220-d3d4-4154-b753-f1c8d7762f98"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""06a4aaa1-39dc-481b-908d-66d0899c721e"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""124c6f8a-45d6-4983-bec5-5130e1b0179f"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player Actions"",
            ""id"": ""8cb07dfb-a0a4-43c5-aa45-71be2c25e3e5"",
            ""actions"": [
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""2abd7fb1-c495-40e6-81ae-e3888c195d83"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""b6c14a56-e1c8-47a2-b939-598736159b1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainHandAttack"",
                    ""type"": ""Button"",
                    ""id"": ""1d1fcb02-11c1-4437-96bf-d5f201c469c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Que MainHandAttack"",
                    ""type"": ""Button"",
                    ""id"": ""ad83e943-11c7-4232-ac91-07748e360082"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainHandHeavyAttack"",
                    ""type"": ""Button"",
                    ""id"": ""089e8665-7d89-4121-b2dd-783acc7d1c2f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Que MainHandHeavyAttack"",
                    ""type"": ""Button"",
                    ""id"": ""a6cc6a18-ebe8-4aa9-94fc-ca9eb99731b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainHandChargeAttack"",
                    ""type"": ""PassThrough"",
                    ""id"": ""93c6e28c-db30-4dde-9d27-9b2ed9b9345d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(pressPoint=0.05)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dance"",
                    ""type"": ""Button"",
                    ""id"": ""1e294a45-de77-4b92-aebe-d543030b8d11"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Revival"",
                    ""type"": ""Button"",
                    ""id"": ""23020cc7-1d10-411d-bea8-9de0d50efcdf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionNumber1"",
                    ""type"": ""Button"",
                    ""id"": ""555bef9f-e6c3-443d-967a-a5a617bec8a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionNumber2"",
                    ""type"": ""Button"",
                    ""id"": ""b6f3b68a-8c0e-44bd-b607-46702ec43808"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionNumber3"",
                    ""type"": ""Button"",
                    ""id"": ""ea2585c8-9e36-49ec-b5d1-dc8d0fc3af50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionNumber4"",
                    ""type"": ""Button"",
                    ""id"": ""f44e6bde-d4b4-4556-a645-adbb58c41149"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionNumber5"",
                    ""type"": ""Button"",
                    ""id"": ""72094e09-d2ad-4f8f-903e-8dcbffbc366a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionNumber6"",
                    ""type"": ""Button"",
                    ""id"": ""97ea46eb-c8e4-435f-9703-eb76fc273af7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionNumber7"",
                    ""type"": ""Button"",
                    ""id"": ""f8dd9a1e-6fbc-44dc-bb01-ae4610aabe10"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionNumber8"",
                    ""type"": ""Button"",
                    ""id"": ""bd6c1a0b-66e2-4dc0-b280-a24f75f532de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionNumber9"",
                    ""type"": ""Button"",
                    ""id"": ""cffbc065-b0fa-4c1a-962f-53fbf3f074ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lock On"",
                    ""type"": ""Button"",
                    ""id"": ""cc845a24-5537-4a58-a287-9cd437e91b87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Seek Left Lock On Target"",
                    ""type"": ""Button"",
                    ""id"": ""2f3191d5-d384-4cac-b914-bd41593d27cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Seek Right Lock On Target"",
                    ""type"": ""Button"",
                    ""id"": ""9f12a3ac-338c-48fa-a22e-2c1345d2c73d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0a028209-5e9f-4ab1-8d91-314eb0944878"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a0fbe47b-aceb-48f2-a124-fd602466e667"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49e77d2b-0c5e-4136-849b-343ab88a5301"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""049c101e-8d5b-41d9-a593-682e4df9b9cb"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6bd858d9-5d51-4ece-a65e-4f0e1dcf29b8"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActionNumber1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77fbd7be-76d1-4500-a08c-9844eb3d6f95"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActionNumber2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f18818fa-881b-435b-ae61-6f1f2f042c3b"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Revival"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6c17767-313e-402f-86eb-e14289442bc6"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lock On"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28c46ba4-80e0-4842-b2ea-10d4dda88200"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainHandAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24060c47-b509-4f26-bbd5-3468e29fabb6"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainHandChargeAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""215d4f15-1bf0-4baf-82bd-ec97dad6272b"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActionNumber3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9daaa794-6a93-40db-9567-c1c8363eff98"",
                    ""path"": ""<Keyboard>/comma"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Seek Left Lock On Target"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35a0144f-ba41-4361-891c-84e1ce9876c1"",
                    ""path"": ""<Keyboard>/period"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Seek Right Lock On Target"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25cd6f1c-343e-4aad-9b3d-2dc90efa52f3"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActionNumber4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a76df9bc-3c7f-4668-be76-97b1b21cda98"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActionNumber5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""955e738c-7c13-4bf0-8312-00a5a9c8fdc7"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActionNumber6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1932ef6e-550f-483d-81cb-396bfda853b4"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActionNumber7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f1b3fc8-b604-4bdd-af07-115d1a6f9133"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActionNumber8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e2bdd67-9d73-4e6f-9a8c-abb4b3b9c09f"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActionNumber9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""654303a0-2815-4bc2-b937-b5a46233c2d2"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainHandHeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1148f675-e6cc-41c0-a37a-480d2078d927"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16aeec2e-f289-418f-867e-1460de1119a4"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a8818f4-5ac9-40f3-b929-d9866f319178"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Que MainHandAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e27ddfaf-9911-4a98-a970-441b13868b51"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Que MainHandHeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""9c7b0220-92f1-4600-8a75-a1a14f7062b9"",
            ""actions"": [
                {
                    ""name"": ""X"",
                    ""type"": ""Button"",
                    ""id"": ""24685160-95be-4cee-9ff8-4b99d1753f3f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EscapeMenu"",
                    ""type"": ""Button"",
                    ""id"": ""6f4986bf-7439-4617-b964-d7e3259fc0ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bfb684b8-188f-42b2-b34f-dc6407ee72a5"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bed04af3-b7e5-4262-8b0a-f7d8fd6e226f"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EscapeMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player Movement
        m_PlayerMovement = asset.FindActionMap("Player Movement", throwIfNotFound: true);
        m_PlayerMovement_Movement = m_PlayerMovement.FindAction("Movement", throwIfNotFound: true);
        // Player Camera
        m_PlayerCamera = asset.FindActionMap("Player Camera", throwIfNotFound: true);
        m_PlayerCamera_Movement = m_PlayerCamera.FindAction("Movement", throwIfNotFound: true);
        // Player Actions
        m_PlayerActions = asset.FindActionMap("Player Actions", throwIfNotFound: true);
        m_PlayerActions_Dodge = m_PlayerActions.FindAction("Dodge", throwIfNotFound: true);
        m_PlayerActions_Jump = m_PlayerActions.FindAction("Jump", throwIfNotFound: true);
        m_PlayerActions_MainHandAttack = m_PlayerActions.FindAction("MainHandAttack", throwIfNotFound: true);
        m_PlayerActions_QueMainHandAttack = m_PlayerActions.FindAction("Que MainHandAttack", throwIfNotFound: true);
        m_PlayerActions_MainHandHeavyAttack = m_PlayerActions.FindAction("MainHandHeavyAttack", throwIfNotFound: true);
        m_PlayerActions_QueMainHandHeavyAttack = m_PlayerActions.FindAction("Que MainHandHeavyAttack", throwIfNotFound: true);
        m_PlayerActions_MainHandChargeAttack = m_PlayerActions.FindAction("MainHandChargeAttack", throwIfNotFound: true);
        m_PlayerActions_Dance = m_PlayerActions.FindAction("Dance", throwIfNotFound: true);
        m_PlayerActions_Revival = m_PlayerActions.FindAction("Revival", throwIfNotFound: true);
        m_PlayerActions_ActionNumber1 = m_PlayerActions.FindAction("ActionNumber1", throwIfNotFound: true);
        m_PlayerActions_ActionNumber2 = m_PlayerActions.FindAction("ActionNumber2", throwIfNotFound: true);
        m_PlayerActions_ActionNumber3 = m_PlayerActions.FindAction("ActionNumber3", throwIfNotFound: true);
        m_PlayerActions_ActionNumber4 = m_PlayerActions.FindAction("ActionNumber4", throwIfNotFound: true);
        m_PlayerActions_ActionNumber5 = m_PlayerActions.FindAction("ActionNumber5", throwIfNotFound: true);
        m_PlayerActions_ActionNumber6 = m_PlayerActions.FindAction("ActionNumber6", throwIfNotFound: true);
        m_PlayerActions_ActionNumber7 = m_PlayerActions.FindAction("ActionNumber7", throwIfNotFound: true);
        m_PlayerActions_ActionNumber8 = m_PlayerActions.FindAction("ActionNumber8", throwIfNotFound: true);
        m_PlayerActions_ActionNumber9 = m_PlayerActions.FindAction("ActionNumber9", throwIfNotFound: true);
        m_PlayerActions_LockOn = m_PlayerActions.FindAction("Lock On", throwIfNotFound: true);
        m_PlayerActions_SeekLeftLockOnTarget = m_PlayerActions.FindAction("Seek Left Lock On Target", throwIfNotFound: true);
        m_PlayerActions_SeekRightLockOnTarget = m_PlayerActions.FindAction("Seek Right Lock On Target", throwIfNotFound: true);
        m_PlayerActions_Sprint = m_PlayerActions.FindAction("Sprint", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_X = m_UI.FindAction("X", throwIfNotFound: true);
        m_UI_EscapeMenu = m_UI.FindAction("EscapeMenu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player Movement
    private readonly InputActionMap m_PlayerMovement;
    private IPlayerMovementActions m_PlayerMovementActionsCallbackInterface;
    private readonly InputAction m_PlayerMovement_Movement;
    public struct PlayerMovementActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerMovementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerMovement_Movement;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
            }
            m_Wrapper.m_PlayerMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
            }
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

    // Player Camera
    private readonly InputActionMap m_PlayerCamera;
    private IPlayerCameraActions m_PlayerCameraActionsCallbackInterface;
    private readonly InputAction m_PlayerCamera_Movement;
    public struct PlayerCameraActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerCameraActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerCamera_Movement;
        public InputActionMap Get() { return m_Wrapper.m_PlayerCamera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerCameraActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerCameraActions instance)
        {
            if (m_Wrapper.m_PlayerCameraActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerCameraActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerCameraActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerCameraActionsCallbackInterface.OnMovement;
            }
            m_Wrapper.m_PlayerCameraActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
            }
        }
    }
    public PlayerCameraActions @PlayerCamera => new PlayerCameraActions(this);

    // Player Actions
    private readonly InputActionMap m_PlayerActions;
    private IPlayerActionsActions m_PlayerActionsActionsCallbackInterface;
    private readonly InputAction m_PlayerActions_Dodge;
    private readonly InputAction m_PlayerActions_Jump;
    private readonly InputAction m_PlayerActions_MainHandAttack;
    private readonly InputAction m_PlayerActions_QueMainHandAttack;
    private readonly InputAction m_PlayerActions_MainHandHeavyAttack;
    private readonly InputAction m_PlayerActions_QueMainHandHeavyAttack;
    private readonly InputAction m_PlayerActions_MainHandChargeAttack;
    private readonly InputAction m_PlayerActions_Dance;
    private readonly InputAction m_PlayerActions_Revival;
    private readonly InputAction m_PlayerActions_ActionNumber1;
    private readonly InputAction m_PlayerActions_ActionNumber2;
    private readonly InputAction m_PlayerActions_ActionNumber3;
    private readonly InputAction m_PlayerActions_ActionNumber4;
    private readonly InputAction m_PlayerActions_ActionNumber5;
    private readonly InputAction m_PlayerActions_ActionNumber6;
    private readonly InputAction m_PlayerActions_ActionNumber7;
    private readonly InputAction m_PlayerActions_ActionNumber8;
    private readonly InputAction m_PlayerActions_ActionNumber9;
    private readonly InputAction m_PlayerActions_LockOn;
    private readonly InputAction m_PlayerActions_SeekLeftLockOnTarget;
    private readonly InputAction m_PlayerActions_SeekRightLockOnTarget;
    private readonly InputAction m_PlayerActions_Sprint;
    public struct PlayerActionsActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActionsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Dodge => m_Wrapper.m_PlayerActions_Dodge;
        public InputAction @Jump => m_Wrapper.m_PlayerActions_Jump;
        public InputAction @MainHandAttack => m_Wrapper.m_PlayerActions_MainHandAttack;
        public InputAction @QueMainHandAttack => m_Wrapper.m_PlayerActions_QueMainHandAttack;
        public InputAction @MainHandHeavyAttack => m_Wrapper.m_PlayerActions_MainHandHeavyAttack;
        public InputAction @QueMainHandHeavyAttack => m_Wrapper.m_PlayerActions_QueMainHandHeavyAttack;
        public InputAction @MainHandChargeAttack => m_Wrapper.m_PlayerActions_MainHandChargeAttack;
        public InputAction @Dance => m_Wrapper.m_PlayerActions_Dance;
        public InputAction @Revival => m_Wrapper.m_PlayerActions_Revival;
        public InputAction @ActionNumber1 => m_Wrapper.m_PlayerActions_ActionNumber1;
        public InputAction @ActionNumber2 => m_Wrapper.m_PlayerActions_ActionNumber2;
        public InputAction @ActionNumber3 => m_Wrapper.m_PlayerActions_ActionNumber3;
        public InputAction @ActionNumber4 => m_Wrapper.m_PlayerActions_ActionNumber4;
        public InputAction @ActionNumber5 => m_Wrapper.m_PlayerActions_ActionNumber5;
        public InputAction @ActionNumber6 => m_Wrapper.m_PlayerActions_ActionNumber6;
        public InputAction @ActionNumber7 => m_Wrapper.m_PlayerActions_ActionNumber7;
        public InputAction @ActionNumber8 => m_Wrapper.m_PlayerActions_ActionNumber8;
        public InputAction @ActionNumber9 => m_Wrapper.m_PlayerActions_ActionNumber9;
        public InputAction @LockOn => m_Wrapper.m_PlayerActions_LockOn;
        public InputAction @SeekLeftLockOnTarget => m_Wrapper.m_PlayerActions_SeekLeftLockOnTarget;
        public InputAction @SeekRightLockOnTarget => m_Wrapper.m_PlayerActions_SeekRightLockOnTarget;
        public InputAction @Sprint => m_Wrapper.m_PlayerActions_Sprint;
        public InputActionMap Get() { return m_Wrapper.m_PlayerActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionsActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActionsActions instance)
        {
            if (m_Wrapper.m_PlayerActionsActionsCallbackInterface != null)
            {
                @Dodge.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnDodge;
                @Dodge.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnDodge;
                @Dodge.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnDodge;
                @Jump.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnJump;
                @MainHandAttack.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnMainHandAttack;
                @MainHandAttack.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnMainHandAttack;
                @MainHandAttack.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnMainHandAttack;
                @QueMainHandAttack.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnQueMainHandAttack;
                @QueMainHandAttack.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnQueMainHandAttack;
                @QueMainHandAttack.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnQueMainHandAttack;
                @MainHandHeavyAttack.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnMainHandHeavyAttack;
                @MainHandHeavyAttack.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnMainHandHeavyAttack;
                @MainHandHeavyAttack.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnMainHandHeavyAttack;
                @QueMainHandHeavyAttack.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnQueMainHandHeavyAttack;
                @QueMainHandHeavyAttack.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnQueMainHandHeavyAttack;
                @QueMainHandHeavyAttack.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnQueMainHandHeavyAttack;
                @MainHandChargeAttack.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnMainHandChargeAttack;
                @MainHandChargeAttack.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnMainHandChargeAttack;
                @MainHandChargeAttack.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnMainHandChargeAttack;
                @Dance.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnDance;
                @Dance.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnDance;
                @Dance.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnDance;
                @Revival.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRevival;
                @Revival.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRevival;
                @Revival.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnRevival;
                @ActionNumber1.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber1;
                @ActionNumber1.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber1;
                @ActionNumber1.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber1;
                @ActionNumber2.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber2;
                @ActionNumber2.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber2;
                @ActionNumber2.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber2;
                @ActionNumber3.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber3;
                @ActionNumber3.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber3;
                @ActionNumber3.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber3;
                @ActionNumber4.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber4;
                @ActionNumber4.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber4;
                @ActionNumber4.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber4;
                @ActionNumber5.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber5;
                @ActionNumber5.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber5;
                @ActionNumber5.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber5;
                @ActionNumber6.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber6;
                @ActionNumber6.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber6;
                @ActionNumber6.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber6;
                @ActionNumber7.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber7;
                @ActionNumber7.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber7;
                @ActionNumber7.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber7;
                @ActionNumber8.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber8;
                @ActionNumber8.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber8;
                @ActionNumber8.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber8;
                @ActionNumber9.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber9;
                @ActionNumber9.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber9;
                @ActionNumber9.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnActionNumber9;
                @LockOn.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnLockOn;
                @LockOn.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnLockOn;
                @LockOn.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnLockOn;
                @SeekLeftLockOnTarget.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnSeekLeftLockOnTarget;
                @SeekLeftLockOnTarget.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnSeekLeftLockOnTarget;
                @SeekLeftLockOnTarget.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnSeekLeftLockOnTarget;
                @SeekRightLockOnTarget.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnSeekRightLockOnTarget;
                @SeekRightLockOnTarget.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnSeekRightLockOnTarget;
                @SeekRightLockOnTarget.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnSeekRightLockOnTarget;
                @Sprint.started -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_PlayerActionsActionsCallbackInterface.OnSprint;
            }
            m_Wrapper.m_PlayerActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Dodge.started += instance.OnDodge;
                @Dodge.performed += instance.OnDodge;
                @Dodge.canceled += instance.OnDodge;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MainHandAttack.started += instance.OnMainHandAttack;
                @MainHandAttack.performed += instance.OnMainHandAttack;
                @MainHandAttack.canceled += instance.OnMainHandAttack;
                @QueMainHandAttack.started += instance.OnQueMainHandAttack;
                @QueMainHandAttack.performed += instance.OnQueMainHandAttack;
                @QueMainHandAttack.canceled += instance.OnQueMainHandAttack;
                @MainHandHeavyAttack.started += instance.OnMainHandHeavyAttack;
                @MainHandHeavyAttack.performed += instance.OnMainHandHeavyAttack;
                @MainHandHeavyAttack.canceled += instance.OnMainHandHeavyAttack;
                @QueMainHandHeavyAttack.started += instance.OnQueMainHandHeavyAttack;
                @QueMainHandHeavyAttack.performed += instance.OnQueMainHandHeavyAttack;
                @QueMainHandHeavyAttack.canceled += instance.OnQueMainHandHeavyAttack;
                @MainHandChargeAttack.started += instance.OnMainHandChargeAttack;
                @MainHandChargeAttack.performed += instance.OnMainHandChargeAttack;
                @MainHandChargeAttack.canceled += instance.OnMainHandChargeAttack;
                @Dance.started += instance.OnDance;
                @Dance.performed += instance.OnDance;
                @Dance.canceled += instance.OnDance;
                @Revival.started += instance.OnRevival;
                @Revival.performed += instance.OnRevival;
                @Revival.canceled += instance.OnRevival;
                @ActionNumber1.started += instance.OnActionNumber1;
                @ActionNumber1.performed += instance.OnActionNumber1;
                @ActionNumber1.canceled += instance.OnActionNumber1;
                @ActionNumber2.started += instance.OnActionNumber2;
                @ActionNumber2.performed += instance.OnActionNumber2;
                @ActionNumber2.canceled += instance.OnActionNumber2;
                @ActionNumber3.started += instance.OnActionNumber3;
                @ActionNumber3.performed += instance.OnActionNumber3;
                @ActionNumber3.canceled += instance.OnActionNumber3;
                @ActionNumber4.started += instance.OnActionNumber4;
                @ActionNumber4.performed += instance.OnActionNumber4;
                @ActionNumber4.canceled += instance.OnActionNumber4;
                @ActionNumber5.started += instance.OnActionNumber5;
                @ActionNumber5.performed += instance.OnActionNumber5;
                @ActionNumber5.canceled += instance.OnActionNumber5;
                @ActionNumber6.started += instance.OnActionNumber6;
                @ActionNumber6.performed += instance.OnActionNumber6;
                @ActionNumber6.canceled += instance.OnActionNumber6;
                @ActionNumber7.started += instance.OnActionNumber7;
                @ActionNumber7.performed += instance.OnActionNumber7;
                @ActionNumber7.canceled += instance.OnActionNumber7;
                @ActionNumber8.started += instance.OnActionNumber8;
                @ActionNumber8.performed += instance.OnActionNumber8;
                @ActionNumber8.canceled += instance.OnActionNumber8;
                @ActionNumber9.started += instance.OnActionNumber9;
                @ActionNumber9.performed += instance.OnActionNumber9;
                @ActionNumber9.canceled += instance.OnActionNumber9;
                @LockOn.started += instance.OnLockOn;
                @LockOn.performed += instance.OnLockOn;
                @LockOn.canceled += instance.OnLockOn;
                @SeekLeftLockOnTarget.started += instance.OnSeekLeftLockOnTarget;
                @SeekLeftLockOnTarget.performed += instance.OnSeekLeftLockOnTarget;
                @SeekLeftLockOnTarget.canceled += instance.OnSeekLeftLockOnTarget;
                @SeekRightLockOnTarget.started += instance.OnSeekRightLockOnTarget;
                @SeekRightLockOnTarget.performed += instance.OnSeekRightLockOnTarget;
                @SeekRightLockOnTarget.canceled += instance.OnSeekRightLockOnTarget;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
            }
        }
    }
    public PlayerActionsActions @PlayerActions => new PlayerActionsActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_X;
    private readonly InputAction m_UI_EscapeMenu;
    public struct UIActions
    {
        private @PlayerControls m_Wrapper;
        public UIActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @X => m_Wrapper.m_UI_X;
        public InputAction @EscapeMenu => m_Wrapper.m_UI_EscapeMenu;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @X.started -= m_Wrapper.m_UIActionsCallbackInterface.OnX;
                @X.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnX;
                @X.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnX;
                @EscapeMenu.started -= m_Wrapper.m_UIActionsCallbackInterface.OnEscapeMenu;
                @EscapeMenu.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnEscapeMenu;
                @EscapeMenu.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnEscapeMenu;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @X.started += instance.OnX;
                @X.performed += instance.OnX;
                @X.canceled += instance.OnX;
                @EscapeMenu.started += instance.OnEscapeMenu;
                @EscapeMenu.performed += instance.OnEscapeMenu;
                @EscapeMenu.canceled += instance.OnEscapeMenu;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IPlayerMovementActions
    {
        void OnMovement(InputAction.CallbackContext context);
    }
    public interface IPlayerCameraActions
    {
        void OnMovement(InputAction.CallbackContext context);
    }
    public interface IPlayerActionsActions
    {
        void OnDodge(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMainHandAttack(InputAction.CallbackContext context);
        void OnQueMainHandAttack(InputAction.CallbackContext context);
        void OnMainHandHeavyAttack(InputAction.CallbackContext context);
        void OnQueMainHandHeavyAttack(InputAction.CallbackContext context);
        void OnMainHandChargeAttack(InputAction.CallbackContext context);
        void OnDance(InputAction.CallbackContext context);
        void OnRevival(InputAction.CallbackContext context);
        void OnActionNumber1(InputAction.CallbackContext context);
        void OnActionNumber2(InputAction.CallbackContext context);
        void OnActionNumber3(InputAction.CallbackContext context);
        void OnActionNumber4(InputAction.CallbackContext context);
        void OnActionNumber5(InputAction.CallbackContext context);
        void OnActionNumber6(InputAction.CallbackContext context);
        void OnActionNumber7(InputAction.CallbackContext context);
        void OnActionNumber8(InputAction.CallbackContext context);
        void OnActionNumber9(InputAction.CallbackContext context);
        void OnLockOn(InputAction.CallbackContext context);
        void OnSeekLeftLockOnTarget(InputAction.CallbackContext context);
        void OnSeekRightLockOnTarget(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnX(InputAction.CallbackContext context);
        void OnEscapeMenu(InputAction.CallbackContext context);
    }
}
